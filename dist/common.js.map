{"version":3,"file":"common.js","sources":["webpack:///./config/dev.js","webpack:///./config/index.js","webpack:///./config/prod.js","webpack:///./src/const/status.js","webpack:///./src/service/apiModules/user.js","webpack:///./src/service/request.ts","webpack:///./src/store/index.ts","webpack:///./src/store/modules/fingerprint.ts","webpack:///./src/store/modules/location.ts","webpack:///./src/store/modules/user.ts","webpack:///./src/utils/tool.ts"],"sourcesContent":["module.exports = {\n  env: {\n    NODE_ENV: '\"development\"'\n  },\n  defineConstants: {\n  },\n  mini: {},\n  h5: {}\n}\n","import { resolve } from 'path'\n\nconst config = {\n  projectName: 'myApp',\n  date: '2021-1-23',\n  designWidth: 750,\n  deviceRatio: {\n    640: 2.34 / 2,\n    750: 1,\n    828: 1.81 / 2\n  },\n  sourceRoot: 'src',\n  outputRoot: 'dist',\n  alias: {\n    '@components': resolve(__dirname, '..', 'src/components'),\n    '@utils': resolve(__dirname, '..', 'src/utils')\n  },\n  plugins: [],\n  defineConstants: {\n  },\n  copy: {\n    patterns: [\n    ],\n    options: {\n    }\n  },\n  framework: 'react',\n  mini: {\n    postcss: {\n      pxtransform: {\n        enable: true,\n        config: {\n\n        }\n      },\n      url: {\n        enable: true,\n        config: {\n          limit: 1024 // 设定转换尺寸上限\n        }\n      },\n      cssModules: {\n        enable: false, // 默认为 false，如需使用 css modules 功能，则设为 true\n        config: {\n          namingPattern: 'module', // 转换模式，取值为 global/module\n          generateScopedName: '[name]__[local]___[hash:base64:5]'\n        }\n      }\n    }\n  },\n  h5: {\n    publicPath: '/',\n    staticDirectory: 'static',\n    postcss: {\n      autoprefixer: {\n        enable: true,\n        config: {\n        }\n      },\n      cssModules: {\n        enable: false, // 默认为 false，如需使用 css modules 功能，则设为 true\n        config: {\n          namingPattern: 'module', // 转换模式，取值为 global/module\n          generateScopedName: '[name]__[local]___[hash:base64:5]'\n        }\n      }\n    }\n  }\n}\n\nexport default function (merge) {\n  if (process.env.NODE_ENV === 'development') {\n    return merge({}, config, require('./dev'))\n  }\n  return merge({}, config, require('./prod'))\n}\n","module.exports = {\n  env: {\n    NODE_ENV: '\"production\"'\n  },\n  defineConstants: {\n  },\n  mini: {},\n  h5: {\n    /**\n     * 如果h5端编译后体积过大，可以使用webpack-bundle-analyzer插件对打包体积进行分析。\n     * 参考代码如下：\n     * webpackChain (chain) {\n     *   chain.plugin('analyzer')\n     *     .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin, [])\n     * }\n     */\n  }\n}\n","export const HTTP_STATUS = {\n    SUCCESS: 200,\n    CLIENT_ERROR: 400,\n    AUTHENTICATE: 401,\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    SERVER_ERROR: 500,\n    BAD_GATEWAY: 502,\n    SERVICE_UNAVAILABLE: 503,\n    GATEWAY_TIMEOUT: 504\n}\n\n// promise status\nexport const SUCCESS = { success: 'success' }\nexport const FAIL = { fail: 'fail' }\nexport const COMPLETE = { complete: 'complete' }\n\nexport const PROMISE_STATUS = {\n    success: 'success',\n    fail: 'fail',\n    complete: 'complete'\n}\n\nexport const RESULT_STATUS = {\n    SUCCESS: 0,\n    SIGNATURE_FAILED: 1000  // 签名失败\n}","import request from \"../request\"\n\nexport const postLogin = (params) => {\n    return request.post('/api/user/login', params)\n}\n\n// 获取用户信息\nexport const getUserInfo = () => {\n    return request.get('/api/userInfo')\n}\n\n// 上传图片\nexport const postUpLoadImage = (params) => {\n    return request.post('/api/upload', params, 'multipart/form-data')\n}\n\n// 修改用户名\nexport const updateUserName = (params) => {\n    return request.post('/api/updateUserName', params)\n}","import Taro from '@tarojs/taro'\nimport { HTTP_STATUS } from '../const/status'\nimport '../../config'\nimport { Toast } from '../utils/tool'\nimport stroe from \"../store/index\"\n\n// eslint-disable-next-line no-unused-vars\n\nconst whileList = ['/api/user/login']\n\ninterface OptionType {\n    url: string,\n    data: any,\n    method: string | undefined,\n    header: {\n        [key: string]: string\n    },\n    success: (result: any) => void,\n    error: (result: any) => void\n}\n\nexport default {\n    async baseOptions(params, method = 'GET') {\n        const { User } = stroe\n        let { url, data } = params\n        // eslint-disable-next-line no-shadow\n        let authority = Taro.getStorageSync('authority')\n        // let token = getApp().globalData.token\n        if (!authority && !whileList.includes(params.url)) {\n            User.loginOut()\n            Taro.showModal({\n                title: '登陆语',\n                content: '未曾相逢先一笑',\n                success: function (res) {\n                    if (res.confirm) {\n                        console.log('用户点击确定')\n                        User.login()\n                    } else if (res.cancel) {\n                        console.log('用户点击取消')\n                        Taro.navigateTo({\n                            url: '/pages/notauthority/index'\n                        })\n                    }\n                }\n            })\n            return {\n                status: 401,\n                data: {}\n            }\n        }\n        Taro.checkSession({\n            success: function () {\n                console.log('ok 未过期，并且在本生命周期一直有效',)\n                //session_key 未过期，并且在本生命周期一直有效\n            },\n            fail: function () {\n                console.log('fail 已经失效，需要重新执行登录流程')\n                // session_key 已经失效，需要重新执行登录流程\n\n                // login() //重新登录\n            }\n        })\n        Taro.showLoading({\n            title: '正在加载',\n            mask: true\n        })\n        let contentType = 'application/x-www-form-urlencoded'\n        contentType = params.contentType || contentType\n        const option: OptionType = {\n            // isShowLoading: true,\n            // loadingText: '正在加载',\n            url: (global as any).constants.website + url,\n            data: data,\n            method: method,\n            header: { 'content-type': contentType, 'authority': Taro.getStorageSync('authority') },\n            success(result) {\n                Taro.hideLoading()\n                switch (result.data.status) {\n                    case HTTP_STATUS.AUTHENTICATE:\n                        Taro.navigateTo({\n                            url: '/pages/notauthority/index'\n                        })\n                        return Toast('当前用户已过期', 'none', 1000)\n                    case HTTP_STATUS.NOT_FOUND:\n                        return Toast('请求资源不存在', 'none', 1000)\n                    case HTTP_STATUS.BAD_GATEWAY:\n                        return Toast('服务端出现了问题', 'none', 1000)\n                    case HTTP_STATUS.FORBIDDEN:\n                        return Toast('没有权限访问', 'none', 1000)\n                    case HTTP_STATUS.SUCCESS:\n                        return result.data\n                    default:\n                        return Toast('其他错误', 'none', 1000)\n                }\n            },\n            error(result) {\n                Taro.hideLoading()\n                Toast('请求接口出现问题')\n            }\n        }\n        return Taro.request(option as any)\n    },\n    get(url, data = '') {\n        let option = { url, data }\n        return this.baseOptions(option)\n    },\n    post: function (url, data, contentType) {\n        let params = { url, data, contentType }\n        return this.baseOptions(params, 'POST')\n    },\n    put: function (url, data, contentType) {\n        let params = { url, data, contentType }\n        return this.baseOptions(params, 'PUT')\n    }\n}","import userStore from './modules/user'\nimport locationStore from './modules/location'\nimport FingerprintStore from \"./modules/fingerprint\"\n\nexport default {\n    User: userStore,\n    Location: locationStore,\n    Fingerprint: FingerprintStore\n}","import { observable } from 'mobx'\nimport Taro from \"@tarojs/taro\"\nimport UserStore from \"./user\"\nimport { Toast } from \"../../utils/tool\"\n\nimport { FingerprintStoreType } from \"../interface/fingerprint\"\n\nconst FingerprintStore = observable<FingerprintStoreType>({\n\n    FingerprintLogin() {\n        if (Taro.canIUse('checkIsSupportSoterAuthentication')) { // 检测当前微信版本是否支持调用指纹相关接口\n            Taro.checkIsSupportSoterAuthentication({\n                success(result: any) {\n                    // result.supportMode = [] 不具备任何被SOTER支持的生物识别方式\n                    // result.supportMode = ['fingerPrint'] 只支持指纹识别\n                    // result.supportMode = ['fingerPrint', 'facial'] 支持指纹识别和人脸识别\n                    if (result.supportMode.length !== 0) {\n                        Taro.checkIsSoterEnrolledInDevice({\n                            // supportMode.length > 1 ? supportMode[1] : supportMode[0]\n                            checkAuthMode: result.supportMode[0],\n                            success(result1: any) {\n                                if (result1.errMsg === 'checkIsSoterEnrolledInDevice:ok' && result.supportMode[0] === 'fingerPrint') {\n                                    Taro.startSoterAuthentication({\n                                        requestAuthModes: ['fingerPrint'],\n                                        challenge: '123456',\n                                        authContent: '请用指纹解锁',\n                                        success(result2: any) {\n                                            if (result2.errCode === 0) {\n                                                // verifySignature(result)\n                                                Toast('指纹验证成功', 'success', 1000)\n                                                UserStore.login()\n                                            } else {\n                                                Toast(result2.errMsg || '验证失败', 'none', 1000)\n                                            }\n                                        }\n                                    })\n\n                                } else if (result1.errMsg === 'checkIsSoterEnrolledInDevice:ok' && result.supportMode[0] === 'facial') {\n                                    Taro.checkIsSupportFacialRecognition({\n                                        checkAliveType: 2,\n                                        // complete: result => {\n                                        //     console.log(result, \"result123123\")\n                                        // }\n                                        success: function (res) {\n                                            if (res.errCode === 0 || res.errMsg === \"checkIsSupportFacialRecognition:ok\") {\n                                                //调用人脸识别\n                                                // _this.startface(_this.data.custName.replace(/(^\\s*)|(\\s*)$/g, \"\"), _this.data.custIdCard);//身份证名称，身份证号码\n                                                return;\n                                            }\n                                            Toast('微信版本过低暂时无法使用此功能请升级微信最新版本')\n                                        },\n                                        fail: res => {\n                                            Toast('微信版本过低暂时无法使用此功能请升级微信最新版本')\n                                        }\n\n                                    })\n                                } else {\n                                    Toast(result1.errMsg || '验证失败', 'none', 1000)\n                                }\n                                // console.log(res, \"fingerPrint\")// isEnrolled的值是0或者1，不知道是不是指纹个数或是Boolean\n                            }\n                        })\n\n                    } else {\n                        Toast('不具备识别', 'none', 1000)\n                    }\n                },\n                fail(result) {\n                    Toast(result.errMsg || '暂不支持指纹验', 'none', 1000)\n                }\n            })\n        } else {\n            Toast('暂不支持指纹验', 'none', 1000)\n        }\n    },\n\n})\nexport default FingerprintStore","import { observable } from 'mobx'\nimport { locationStoreType } from \"../interface/localtion\"\n\nconst locationStore = observable<locationStoreType>({\n    startAddress: {\n        title: '',\n        lat: null,\n        lng: null\n    },\n    endAddress: {\n        title: '',\n        lat: null,\n        lng: null\n    },\n    currentAddress: {\n        title: ''\n    },\n\n    isLocationCom: '',\n\n    setStartAddress(params) {\n        this.startAddress = params\n    },\n\n    setEndAddress(params) {\n        this.endAddress = params\n    },\n    setCurrentAddress(params) {\n        this.currentAddress = params.toString()\n    }\n\n})\n\nexport default locationStore","import { observable } from 'mobx'\nimport Taro from \"@tarojs/taro\"\nimport { postLogin } from \"../../service/apiModules/user\"\n\nimport { UserStoreType } from \"../interface/user\"\n\nconst UserStore = observable<UserStoreType>({\n    userInfo: {},\n    setuserInfo(params) {\n        this.userInfo = params\n    },\n\n    login() {\n        Taro.login({\n            success: async function (res) {\n                if (res.code) {\n                    //发起网络请求\n                    const result = await postLogin({ code: res.code })\n                    if (result.data.status === 200) {\n                        Taro.setStorageSync(\"user_id\", result.data.openid)\n                        Taro.setStorageSync(\"authority\", result.data.Authority)\n                        Taro.switchTab({\n                            url: '/pages/index/index'\n                        })\n                    } else {\n                        Taro.showToast({\n                            title: result.message || '失败了',\n                            duration: 1000,\n                            icon: 'none',\n                            mask: false,\n                        })\n                    }\n\n                } else {\n                    Taro.removeStorageSync('user_id')\n                    Taro.removeStorageSync('authority')\n                    Taro.showToast({\n                        title: res.errMsg,\n                        duration: 2000,\n                        icon: 'none',\n                        mask: false,\n                    })\n                }\n            }\n        })\n    },\n\n    loginOut() {\n        Taro.removeStorageSync('user_id')\n        Taro.removeStorageSync('authority')\n    }\n})\n\nexport default UserStore","import Taro from \"@tarojs/taro\"\n\n// export const promisify = (func, ctx) => {\n//     // 返回一个新的function\n//     return function () {\n//         // 初始化this作用域\n//         var ctx = ctx || this;\n//         // 新方法返回的promise\n//         return new Promise((resolve, reject) => {\n//             // 调用原来的非promise方法func，绑定作用域，传参，以及callback（callback为func的最后一个参数）\n//             func.call(ctx, ...arguments, function () {\n//                 // 将回调函数中的的第一个参数error单独取出\n//                 var args = Array.prototype.map.call(arguments, item => item);\n//                 var err = args.shift();\n//                 // 判断是否有error\n//                 if (err) {\n//                     reject(err)\n//                 } else {\n//                     // 没有error则将后续参数resolve出来\n//                     args = args.length > 1 ? args : args[0];\n//                     resolve(args);\n//                 }\n//             });\n//         })\n//     };\n// }\n\n// export const promiseImage = (url) => {\n//     return new Promise(function (resolve, reject) {\n//         resolve(url)\n//     })\n// }\n\n// export const isChinese = (str) => {\n//     if (escape(str).indexOf(\"%u\") < 0) return false\n//     return true\n// }\n\n// export const handleName = (str) => {\n//     let res = emoj2str(str)\n//     if (isChinese(res)) {\n//         res = res.length > 4 ? res.slice(0, 4) + '...' : res\n//     } else {\n//         res = res.length > 7 ? res.slice(0, 7) + '...' : res\n//     }\n//     return res\n// }\n\n// export const emoj2str = (str) => {\n//     return unescape(escape(str).replace(/\\%uD.{3}/g, ''))\n// }\n\n// /*获取当前页url*/\n// export const getCurrentPageUrl = () => {\n//     let pages = getCurrentPages()\n//     let currentPage = pages[pages.length - 1]\n//     let url = currentPage.route\n//     return url\n// }\n\n// export const formatTime = date => {\n//     const year = date.getFullYear()\n//     const month = date.getMonth() + 1\n//     const day = date.getDate()\n//     const hour = date.getHours()\n//     const minute = date.getMinutes()\n//     const second = date.getSeconds()\n\n//     return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')\n// }\n\n// export const formatNumber = n => {\n//     n = n.toString()\n//     return n[1] ? n : '0' + n\n// }\n\n// export const logError = (name, action, info) => {\n//     if (!info) {\n//         info = 'empty'\n//     }\n//     try {\n//         let deviceInfo = Taro.getSystemInfoSync()\n//         var device = JSON.stringify(deviceInfo)\n//     } catch (e) {\n//         console.error('not support getSystemInfoSync api', err.message)\n//     }\n//     let time = formatTime(new Date())\n//     console.error(time, name, action, info, device)\n//     // if (typeof action !== 'object') {\n//     // fundebug.notify(name, action, info)\n//     // }\n//     // fundebug.notifyError(info, { name, action, device, time })\n//     if (typeof info === 'object') {\n//         info = JSON.stringify(info)\n//     }\n// }\n\ninterface ToastType {\n    title: string,\n    icon?: string,\n    duration?: number | undefined,\n    mask?: boolean\n}\n\nexport const Toast = (title: string = ' ', icon: string | undefined = undefined, duration: number | undefined = 2000, mask: boolean | undefined = true): void => {\n    Taro.showToast({\n        title,\n        icon,\n        duration,\n        mask\n    })\n}"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAPA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAEA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAFA;AAFA;AAbA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAFA;AAFA;AANA;AAHA;AAhDA;AAoEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;AC3EA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAPA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAGA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAbA;AARA;AAwBA;AACA;AAFA;AACA;AAxBA;AA4BA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AA9BA;AA9CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+EA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA5FA;;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AA3CA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DA;AA4DA;AACA;AACA;AACA;AAnEA;AAsEA;;;;;;;;;;;;;AC7EA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA8BA;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAlBA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AAgCA;AAEA;AACA;AACA;AACA;AA5CA;AA+CA;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;A","sourceRoot":""}