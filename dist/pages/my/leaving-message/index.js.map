{"version":3,"file":"pages/my/leaving-message/index.js","sources":["webpack:///./src/pages/my/leaving-message/index.tsx","webpack:///./node_modules/taro-ui/dist/style/components/message.scss","webpack:///./node_modules/taro-ui/dist/style/components/modal.scss","webpack:///./node_modules/taro-ui/dist/style/components/nav-bar.scss","webpack:///./src/pages/my/leaving-message/index.scss","webpack:///./src/pages/my/leaving-message/index.tsx?d462"],"sourcesContent":["import React, { useState } from 'react'\nimport Taro, { useDidShow } from \"@tarojs/taro\"\nimport { AtTextarea, AtMessage, AtButton, AtNavBar } from 'taro-ui'\nimport { View } from \"@tarojs/components\"\n// import HandleButton from \"../components/handle_button\"\nimport { createLeavingMessage } from '../../../service/apiModules/api'\n\nimport \"taro-ui/dist/style/components/message.scss\";\nimport \"taro-ui/dist/style/components/modal.scss\";\nimport \"taro-ui/dist/style/components/nav-bar.scss\";\nimport \"taro-ui/dist/style/components/icon.scss\";\nimport \"./index.scss\"\n\nconst LeavingMessage: React.FC = () => {\n    const [message, setMessage] = useState<string>('')\n    const [open, setOpen] = useState<boolean>(false)\n\n\n    useDidShow(() => {\n        Taro.setNavigationBarTitle({\n            title: \"\"\n        })\n    })\n\n    function handleMessageChange(value: any) {\n        setMessage(value)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    function handleCancel() {\n        setOpen(false)\n    }\n\n    function handle_Confirm() {\n        Taro.atMessage({\n            'message': '消息通知',\n            'type': 'success',\n        })\n        setOpen(false)\n    }\n\n    async function sendMessage() {\n        if (message) {\n            const { data } = await createLeavingMessage({ message: message })\n            if (data.code === 200) {\n                setMessage('')\n                Taro.atMessage({\n                    'message': data.massage,\n                    'type': 'success',\n                })\n            } else {\n                Taro.atMessage({\n                    'message': data.massage,\n                    'type': 'warning',\n                })\n            }\n        } else {\n            Taro.atMessage({\n                'message': '留言内容不能为空',\n                'type': 'warning',\n            })\n        }\n    }\n\n    function handleClickBack() {\n        Taro.switchTab({\n            url: '/pages/my/index'\n        })\n    }\n\n    return (\n        <View className='leaving-message'>\n            <AtNavBar\n                onClickRgIconSt={() => { handleClickBack() }}\n                onClickRgIconNd={() => { handleClickBack() }}\n                onClickLeftIcon={() => { handleClickBack() }}\n                color='#000'\n                leftText='返回'\n                title=\"留言\"\n                leftIconType='chevron-left'\n            > </AtNavBar>\n            <AtTextarea\n                className=\"text\"\n                value={message}\n                onChange={(e) => { handleMessageChange(e) }}\n                maxLength={200}\n                height={300}\n                placeholder='您的问题是...'\n            />\n            <AtButton className='at-icon-menu' type='primary' onClick={() => { sendMessage() }}>提交</AtButton>\n            <AtMessage />\n            {/* <AtModal\n                isOpened={open}\n                title='确认写好了?'\n                cancelText='取消'\n                confirmText='确认'\n                onClose={() => { handleClose() }}\n                onCancel={() => { handleCancel() }}\n                onConfirm={() => { handleConfirm() }}\n                content=''\n            /> */}\n        </View>\n    )\n}\n\nexport default LeavingMessage\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/my/leaving-message/index', {}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA9BA;AAAA;AAAA;AACA;AADA;AAAA;AA+BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAHA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AAfA;AAAA;AACA;AADA;AAgBA;AACA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AACA;AAqDA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AADA;AAEA;AAAA;AAFA;AAGA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/EA;AACA;AA8FA;;;;;;;;;;;AC5GA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}