{"version":3,"file":"pages/notauthority/index.js","sources":["webpack:///./src/pages/notauthority/index.tsx","webpack:///./src/pages/notauthority/index.scss","webpack:///./src/pages/notauthority/index.tsx?fb4b"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Taro, { useDidShow } from \"@tarojs/taro\"\nimport { AtForm, AtInput, AtButton } from 'taro-ui'\nimport { View, Form, Input, Text, CoverImage, Button } from \"@tarojs/components\"\n\nimport { Toast, Throttle } from '../../utils/tool'\nimport store from \"../../store/index\"\nimport \"../../../config\"\nimport \"./index.scss\"\n\n// import cloud from 'wx-server-sdk' //暂时没有使用指纹校验\n// cloud.init()\n\nconst Notauthority = () => {\n    const { User, Fingerprint } = store\n    const [phone, setPhone] = useState<string | number>('')\n    const [code, setCode] = useState(User.code)\n    const [disabledCode, setDisabledCode] = useState(60)\n\n    useDidShow(() => {\n        Taro.setNavigationBarTitle({\n            title: \"登陆\"\n        })\n    })\n\n    useEffect(() => {\n        if (!User.isOK) {\n            setCode(User.code)\n        }\n    }, [User.code])\n\n    useEffect(() => {\n        User.setCode()\n        setCode('')\n        return () => { }\n    }, [])\n\n    // 指纹登陆\n    function login() {\n        Fingerprint.FingerprintLogin()\n    }\n\n    //登陆\n    function Userlogin() {\n        if (!/^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/.test(phone)) return Toast('请输入正确的手机号', 'none', 1000)\n        if (User.code && code + '' === User.code + '') {\n            User.login()\n        } else {\n            Toast('验证码输入有误', 'none', 1000)\n        }\n    }\n\n    // 获取验证码\n    function getCode() {\n        if (!/^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/.test(phone)) return Toast('请输入正确的手机号', 'none', 1000)\n        let count = 59\n        setDisabledCode(59)\n        User.getCode(+phone)\n        let timer = setInterval(() => {\n            if (count <= 0) {\n                setDisabledCode(60)\n                clearInterval(timer)\n            } else {\n                setDisabledCode(--count)\n            }\n        }, 1000)\n    }\n\n    // async function verifySignature(context) {\n    //     try {\n    //         const result = await cloud.openapi.soter.verifySignature({\n    //             openid: Taro.getStorageSync('user_id'),\n    //             jsonString: '$resultJSON',\n    //             jsonSignature: '$resultJSONSignature'\n    //         })\n    //         return result\n    //     } catch (err) {\n    //         return err\n    //     }\n    // }\n\n    return (\n        <View>\n            <View>\n                <CoverImage className='logo' src={(global as any).constants.icon.notAuthorityLogo} />\n            </View>\n            <View onClick={() => { login() }} >\n                <CoverImage className='login' src={(global as any).constants.icon.notAuthorityLogin} />\n            </View>\n            <AtForm className=\"form-login\" >\n                <AtInput\n                    name='phone'\n                    title='手机号'\n                    type='text'\n                    placeholder='请输入手机号...'\n                    value={phone as any}\n                    onChange={(value) => { setPhone(value) }}\n                />\n                <View className='example-body'>\n                    <AtInput\n                        className=\"code\"\n                        name='code'\n                        title='验证码'\n                        type='text'\n                        placeholder='请输入验证码...'\n                        value={code as any}\n                        onChange={(value) => { setCode(value) }}\n                    />\n                    {\n                        disabledCode >= 60 ? <AtButton className=\"code-btn\" onClick={() => { getCode() }}>获取验证码</AtButton> :\n                            <AtButton className=\"code-btn\" >{disabledCode}秒后再次获取</AtButton>\n                    }\n                </View>\n                <AtButton className=\"btn\" formType='submit' onClick={() => { Userlogin() }}>提交</AtButton>\n                {/* <AtButton formType='reset'>清空</AtButton> */}\n            </AtForm>\n            {/* <View className=\"bottom\">\n                <Form className=\"form-login\" onSubmit={() => { }} >\n                    <View className='example-body'>\n                        <Text>手机号：</Text><Input maxlength={11} value={phone} onInput={(e) => { setPhone(e.detail.value) }} className=\"phone\" />\n                    </View>\n                    <View className='example-body'>\n                        <Text>验证码：</Text><Input className=\"code\" maxlength={6} value={code as any} onInput={(e) => { setCode(e.detail.value) }} />\n                        {\n                            disabledCode >= 60 ? <Button className=\"code-btn\" onClick={() => { getCode() }}>获取验证码</Button> :\n                                <Button className=\"code-btn\" >{disabledCode}秒后再次获取</Button>\n                        }\n                    </View>\n                    <View className='example-body'>\n                        <Text className=\"btn\" onClick={() => { Userlogin() }}>登陆</Text>\n                    </View>\n                </Form>\n            </View> */}\n\n            {/* <View className='btn' onClick={() => { Userlogin() }} >\n                免密登陆\n            </View> */}\n        </View >\n    )\n}\n\nexport default Notauthority\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/notauthority/index', {}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AA1BA;AACA;AACA;AA4BA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AApCA;AACA;AACA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AA7CA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AApGA;AACA;AA+HA;;;;;;;;;;;;AC7IA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}